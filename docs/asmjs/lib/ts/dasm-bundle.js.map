{"version":3,"file":"dasm-bundle.js","sources":["common/host-origin.ts","common/file-xfer.ts","dasm.ts"],"sourcesContent":["\nexport const ORIGIN = (() => {\n    var b = window.location.href.split(\"/\");\n    return [b[0], b[1], b[2]].join(\"/\");\n})();\n","declare const FS: any;\n\nimport { ORIGIN } from \"./host-origin\";\n\nlet messageCounter = 1000;\n\nconst TYPE_FILE = 'F';\nconst TYPE_DIR = 'D';\n\nexport interface FileListItem {\n    displayName: string;\n    fullPath: string;\n    type: string;\n}\n\nconst sendMessage = <T extends BaseSendMessageRequest, U>(destwindow: Window, message: T) => {\n    const currentMessageCounter = messageCounter;\n    messageCounter += 1;\n\n    return new Promise<U>((resolve, reject) => {\n        const replyListener = function replyListener(e: MessageEvent) {\n            if (e.origin === ORIGIN) {\n                const data = JSON.parse(e.data);\n\n                if (data.messageID === currentMessageCounter) {\n                    window.removeEventListener('message', replyListener, false);\n                    resolve(data);\n                }\n            }\n        }\n\n        window.addEventListener('message', replyListener, false);\n        message.messageID = currentMessageCounter;\n        destwindow.postMessage(JSON.stringify(message), ORIGIN);\n    });\n};\n\n\nconst waitForPong = () => {\n    return new Promise((resolve, reject) => {\n        const replyListener = function replyListener(e: MessageEvent) {\n            if (e.origin === ORIGIN) {\n                const data = JSON.parse(e.data);\n\n                if (data.action === \"PONG\") {\n                    window.removeEventListener('message', replyListener, false);\n                    resolve(data);\n                }\n            }\n        }\n\n        window.addEventListener('message', replyListener, false);\n    });\n};\n\nconst sendPong = (destwindow: Window) => {\n    const message = {\n        action: \"PONG\",\n    }\n    destwindow.postMessage(JSON.stringify(message), ORIGIN);\n};\n\nconst getFileListEvent = (data: GetFileListRequest) => {\n    const names = FS.readdir(data.dir).filter((n: string) => n !== \".\");\n\n    const list: DirectoryList[] = names.map((n: string) => {\n        const s = FS.lstat(`${data.dir}/${n}`);\n\n        const isDir = FS.isDir(s.mode);\n        const isFile = FS.isFile(s.mode);\n\n        const type = (isDir ? TYPE_DIR : \"\") + (isFile ? TYPE_FILE : \"\");\n\n        const blocks = type === TYPE_DIR ? \"[]\" : \"\";\n        const displayName = blocks.charAt(0) + n.toUpperCase() + blocks.charAt(1);\n        const r: DirectoryList = {\n            displayName,\n            name: n,\n            type,\n            fullPath: `${data.dir}/${n}`,\n\n        };\n\n        return r;\n    });\n\n    var dirs = list.filter((p) => p.type === TYPE_DIR);\n    var files = list.filter((p) => p.type === TYPE_FILE);\n\n    interface FileSortValue {\n        name: string;\n    }\n\n    const sortF = (a: FileSortValue, b: FileSortValue) => (a.name.toUpperCase() > b.name.toUpperCase()) ? 1 : -1;\n\n    dirs.sort(sortF);\n    files.sort(sortF);\n\n    const response: GetFileListResponse = {\n        isSuccess: true,\n        files: [...dirs, ...files],\n        messageID: data.messageID,\n    };\n\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst unlinkFileEvent = (request: UnlinkFileRequest) => {\n    FS.writeFile(request.filename, \"\");\n    FS.unlink(request.filename);\n\n    const response: UnlinkFileResponse = {\n        messageID: request.messageID,\n    };\n\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst writeTextFile = (request: WriteTextFileRequest) => {\n    FS.writeFile(request.filename, request.contents);\n    const response: WriteTextFileResponse = {\n        messageID: request.messageID,\n    };\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst writeBinaryFile = (request: WriteBinaryFileRequest) => {\n    FS.writeFile(request.filename, request.contents);\n    const response: WriteBinaryFileResponse = {\n        messageID: request.messageID,\n    };\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst readTextFileEvent = (request: ReadTextFileRequest) => {\n    const response: ReadTextFileResponse = {\n        isSuccess: true,\n        contents: FS.readFile(request.filename, { encoding: \"utf8\" }),\n        messageID: request.messageID,\n    }\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst readBinaryFileEvent = (request: ReadBinaryFileRequest) => {\n    const response: ReadBinaryFileResponse = {\n        isSuccess: true,\n        contents: FS.readFile(request.filename),\n        messageID: request.messageID,\n    }\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst assertNever = (x: never): never => {\n    // Don't panic.\n    // throw new Error(`Unexpected object: ${x}`);\n    return null as never;\n}\n\nconst ioEventListener = function (e: MessageEvent) {\n    if (e.origin === ORIGIN) {\n        const request = JSON.parse(e.data) as IOEvent;\n\n        switch (request.action) {\n            case \"writeTextFile\":\n                writeTextFile(request);\n                break;\n            case \"writeBinaryFile\":\n                writeBinaryFile(request);\n                break;\n            case \"readTextFile\":\n                readTextFileEvent(request);\n                break;\n            case \"readBinaryFile\":\n                readBinaryFileEvent(request);\n                break;\n            case \"unlinkFile\":\n                unlinkFileEvent(request);\n                break;\n            case \"getFileList\":\n                getFileListEvent(request);\n                break;\n            default:\n                assertNever(request);\n        }\n    }\n}\n\nwindow.addEventListener('message', ioEventListener, false);\n\nexport default {\n    sendMessage,\n    waitForPong,\n    sendPong,\n    TYPE_DIR,\n    TYPE_FILE,\n}","import fileXfer from \"./common/file-xfer\";\nimport { ORIGIN } from \"./common/host-origin\";\n\ndeclare const Module: any;\nconst stdOut: string[] = [];\ndeclare const FS: any;\n\nconst stdoutToError = (stdout: string[]) => {\n    // bios.asm:3: error: Unknown Mnemonic 'zzz'.\n\n    const errors: BuildErrors[] = [];\n\n    stdout.forEach(l => {\n        const [file, line, code, error] = l\n            .split(\":\")\n            .map(s => s.trim());\n\n        if (code === \"error\") {\n            const err: BuildErrors = {\n                file,\n                line: +line,\n                code,\n                error,\n            };\n\n            errors.push(err);\n        }\n    });\n    return errors;\n};\n\nconst runAssemblerEvent = (request: RunAssemblerRequest) => {\n    const outputformat = 2;\n\n    const zargs = [\n        `${request.filename}.asm`,\n        `-o${request.filename}.bin`,\n        `-l${request.filename}.lst`,\n        `-s${request.filename}.sym`,\n        `-E2`,\n        `-f${outputformat}`,\n    ];\n\n    Module.callMain(zargs);\n\n    const listing = FS.readFile(`${request.filename}.lst`, { encoding: \"utf8\" });\n    const typedBin = FS.readFile(`${request.filename}.bin`);\n\n    // Convert a typed array to a normal JS array.\n    // Typed arrays don't survive the transport process.\n    const bin = Array.from(typedBin) as number[];\n\n    const response: RunAssemblerResponse = {\n        errors: stdoutToError(stdOut),\n        stdout: stdOut,\n        listing: listing,\n        binary: bin,\n        messageID: request.messageID,\n    };\n\n    parent.postMessage(JSON.stringify(response), ORIGIN);\n};\n\nconst assertNever = (x: never): never => {\n    // Don't panic.\n    // throw new Error(`Unexpected object: ${x}`);\n    return null as never;\n}\n\nconst buildEventListener = function (e: MessageEvent) {\n    if (e.origin === ORIGIN) {\n        const request = JSON.parse(e.data) as BuildEvent;\n\n        switch (request.action) {\n            case \"runAssembler\":\n                runAssemblerEvent(request);\n                break;\n            case \"runAssembler2\":\n                // runAssemblerEvent(request);\n                break;\n            default:\n                assertNever(request);\n        }\n    }\n}\n\n\nwindow.addEventListener('message', buildEventListener, false);\n\n(window as any).dasm_main = () => {\n    fileXfer.sendPong(parent);\n};\n\n// Note:\n//   The version of dasm used here logs error messages to stdout\n//   not stderror.\n(window as any).dasm_log_stdout = (msg: string) => {\n    stdOut.push(msg);\n};"],"names":[],"mappings":"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"}